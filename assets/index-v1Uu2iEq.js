(function(){const relList=document.createElement("link").relList;if(relList&&relList.supports&&relList.supports("modulepreload"))return;for(const link of document.querySelectorAll('link[rel="modulepreload"]'))processPreload(link);new MutationObserver(mutations=>{for(const mutation of mutations)if(mutation.type==="childList")for(const node of mutation.addedNodes)node.tagName==="LINK"&&node.rel==="modulepreload"&&processPreload(node)}).observe(document,{childList:!0,subtree:!0});function getFetchOpts(link){const fetchOpts={};return link.integrity&&(fetchOpts.integrity=link.integrity),link.referrerPolicy&&(fetchOpts.referrerPolicy=link.referrerPolicy),link.crossOrigin==="use-credentials"?fetchOpts.credentials="include":link.crossOrigin==="anonymous"?fetchOpts.credentials="omit":fetchOpts.credentials="same-origin",fetchOpts}function processPreload(link){if(link.ep)return;link.ep=!0;const fetchOpts=getFetchOpts(link);fetch(link.href,fetchOpts)}})();window.playedSounds=[];window.AudioContext??=window.webkitAudioContext;const audioCtx=new AudioContext,mainGain=audioCtx.createGain();mainGain.connect(audioCtx.destination);const storageKeys={muteSoundEffects:"snakeshift:muteSoundEffects",volume:"snakeshift:volume"},loadProgress=document.getElementById("load-progress"),muteButton=document.getElementById("mute-button"),muteButtonText=document.getElementById("mute-button-text");let muted=!1;try{muted=localStorage[storageKeys.muteSoundEffects]==="true";let volume=parseFloat(localStorage[storageKeys.volume]);(!isFinite(volume)||volume<0||volume>1)&&(volume=.5),mainGain.gain.value=volume}catch(error){console.error("Couldn't initialize preferences:",error)}const resources={},resourcePaths={undo:"audio/sound-effects/undo.wav",redo:"audio/sound-effects/redo.wav",gong:"audio/sound-effects/gong-2-232435.mp3",gongBrilliant:"audio/sound-effects/486629__jenszygar__gong-brilliant-paiste-32.mp3",eat:"audio/sound-effects/glockenspiel_a-102771.mp3",move:"audio/sound-effects/tiny-drip.wav",switchSnakes:"audio/sound-effects/snake-hissing-6092.mp3"},totalResources=Object.keys(resourcePaths).length;let loadedResources=0;const numProgressBricks=14,progressBricks=[],loadResources=async resourcePathsByID=>{const entries=Object.entries(resourcePathsByID);let silenceErrors=!1;return Object.fromEntries(await Promise.all(entries.map(async([id,path])=>{let resource;try{resource=await loadResource(path)}catch(error){silenceErrors||(location.protocol==="file:"?(showErrorMessage(`This page must be served by a web server,
in order to load files needed for the game.`,error),silenceErrors=!0):showErrorMessage(`Failed to load resource '${path}'`,error))}if(loadedResources+=1,loadedResources/totalResources*numProgressBricks>progressBricks.length){const progressBrick=document.createElement("div");progressBrick.classList.add("load-progress-brick"),progressBricks.push(progressBrick),loadProgress.appendChild(progressBrick)}return[id,resource]})))},enableAudioViaUserGesture=()=>{muted||audioCtx.resume()},toggleMute=({savePreference=!0}={})=>{muted=!muted,updateMuteButton();try{savePreference&&(localStorage[storageKeys.muteSoundEffects]=muted)}catch{}muted?audioCtx.suspend():audioCtx.resume()},updateMuteButton=()=>{muteButton.ariaPressed=muted?"true":"false",muteButtonText.textContent=muted?"Unmute":"Mute"},loadSound=async path=>{const response=await fetch(path);if(response.ok)return await audioCtx.decodeAudioData(await response.arrayBuffer());throw new Error(`got HTTP ${response.status} fetching '${path}'`)},loadResource=loadSound,showErrorMessage=(message,error)=>{alert(`${message}

${error}`)},playSound=(soundName,{playbackRate=1,volume=1,cutOffEndFraction=0}={})=>{try{if(muted)return;window.playedSounds.push(soundName);const audioBuffer=resources[soundName];if(!audioBuffer)throw new Error(`No AudioBuffer loaded for sound '${soundName}'`);if(audioCtx.state!=="running"){console.warn("Audio context not running, can't play sound");return}const gain=audioCtx.createGain(),source=audioCtx.createBufferSource();source.buffer=audioBuffer,source.connect(gain),gain.connect(mainGain),gain.gain.value=volume,source.playbackRate.value=playbackRate,cutOffEndFraction&&gain.gain.linearRampToValueAtTime(0,audioCtx.currentTime+audioBuffer.duration*(1-cutOffEndFraction)),source.start(0)}catch(error){console.error(`Failed to play sound '${soundName}':`,error)}};muteButton.addEventListener("click",()=>{toggleMute()});updateMuteButton();class Entity{solid=!0}var ControlScheme=(ControlScheme2=>(ControlScheme2[ControlScheme2.KeyboardAbsoluteDirection=0]="KeyboardAbsoluteDirection",ControlScheme2[ControlScheme2.KeyboardFacingRelative=1]="KeyboardFacingRelative",ControlScheme2[ControlScheme2.Gamepad=2]="Gamepad",ControlScheme2[ControlScheme2.Pointer=3]="Pointer",ControlScheme2))(ControlScheme||{}),CollisionLayer=(CollisionLayer2=>(CollisionLayer2[CollisionLayer2.None=0]="None",CollisionLayer2[CollisionLayer2.White=1]="White",CollisionLayer2[CollisionLayer2.Black=2]="Black",CollisionLayer2))(CollisionLayer||{});const DIRECTIONS=[{x:1,y:0},{x:0,y:1},{x:-1,y:0},{x:0,y:-1}];class RectangularEntity extends Entity{constructor(x=0,y=0,width=1,height=1,layer=CollisionLayer.White){super(),this.x=x,this.y=y,this.width=width,this.height=height,this.layer=layer}at(x,y){return x>=this.x&&x<this.x+this.width&&y>=this.y&&y<this.y+this.height?{entity:this,layer:this.layer}:null}draw(ctx2){const pixel=1/ctx2.getTransform().a;ctx2.fillStyle=this.layer===CollisionLayer.White?"#fff":"#000",ctx2.fillRect(this.x,this.y,this.width+pixel,this.height+pixel)}}class Collectable extends RectangularEntity{static VISUAL_SIZE=.8;solid=!1;#time=0;step(time){this.#time=time}draw(ctx2){ctx2.save(),ctx2.lineWidth=.1,ctx2.strokeStyle=this.layer===CollisionLayer.White?"#000":"#fff",ctx2.fillStyle=this.layer===CollisionLayer.White?"#fff":"#000",ctx2.translate(this.x,this.y),ctx2.scale(this.width,this.height),ctx2.translate(1/2,1/2),ctx2.rotate(Math.sin(this.#time/1e3+this.x/10+this.y/10)*Math.PI/12),ctx2.beginPath(),ctx2.moveTo(0,-Collectable.VISUAL_SIZE/2);for(let i=0;i<4;i++)ctx2.rotate(Math.PI/2),ctx2.quadraticCurveTo(0,0,0,-Collectable.VISUAL_SIZE/2);ctx2.stroke(),ctx2.fill(),ctx2.restore()}}class Block extends RectangularEntity{}class Crate extends RectangularEntity{draw(ctx2){const pixel=1/ctx2.getTransform().a;ctx2.save(),ctx2.lineWidth=.2,ctx2.strokeStyle=this.layer===CollisionLayer.White?"#fff":"#000",ctx2.fillStyle=this.layer===CollisionLayer.White?"#fff":"#000",ctx2.beginPath();const inset=.1;ctx2.rect(this.x+inset,this.y+inset,this.width-inset*2+pixel,this.height-inset*2+pixel),ctx2.fill(),ctx2.stroke(),ctx2.lineWidth=.05,ctx2.strokeStyle=this.layer===CollisionLayer.White?"#000":"#fff",ctx2.stroke(),ctx2.clip(),ctx2.beginPath(),ctx2.moveTo(this.x,this.y),ctx2.lineTo(this.x+this.width,this.y+this.height),ctx2.lineWidth=.2,ctx2.strokeStyle=this.layer===CollisionLayer.White?"#000":"#fff",ctx2.stroke(),ctx2.lineWidth=.1,ctx2.strokeStyle=this.layer===CollisionLayer.White?"#fff":"#000",ctx2.stroke(),ctx2.beginPath(),ctx2.moveTo(this.x+this.width,this.y),ctx2.lineTo(this.x,this.y+this.height),ctx2.lineWidth=.2,ctx2.strokeStyle=this.layer===CollisionLayer.White?"#000":"#fff",ctx2.stroke(),ctx2.lineWidth=.1,ctx2.strokeStyle=this.layer===CollisionLayer.White?"#fff":"#000",ctx2.stroke(),ctx2.restore()}}let hoverEffect,levelBorder;function setHighlight(tile,options={}){hoverEffect&&(hoverEffect.remove(),hoverEffect=void 0),tile&&(activePlayer||activityMode==="edit")&&(hoverEffect=document.createElement("div"),hoverEffect.classList.add("hover-effect"),document.body.appendChild(hoverEffect),hoverEffect?.classList.toggle("active-effect",options.pressed??!1),hoverEffect?.classList.toggle("valid",options.valid??!0),hoverEffect?.classList.toggle("selection",options.isSelection??!1),positionElement(hoverEffect,tileOnPage(tile)))}function setLevelBorder(levelInfo2){levelBorder||(levelBorder=document.createElement("div"),levelBorder.classList.add("level-border"),document.body.appendChild(levelBorder)),positionElement(levelBorder,tileOnPage({x:0,y:0,width:levelInfo2.width,height:levelInfo2.height}))}function positionElement(element,rect){element.style.left=`${rect.x}px`,element.style.top=`${rect.y}px`,element.style.width=`${rect.width}px`,element.style.height=`${rect.height}px`}function highlightMove(tile,options={}){const valid=tile?activePlayer?.analyzeMoveAbsolute(tile).valid:!1;setHighlight(tile,{valid,...options})}const canvas=document.createElement("canvas");canvas.style.touchAction="none";const ctx=canvas.getContext("2d");document.body.appendChild(canvas);const editorGUI=document.getElementById("entities-bar"),backButton=document.querySelector(".back-to-main-menu-button");let transform;function draw(){const styleWidth=window.innerWidth,editorGUIRect=editorGUI.getBoundingClientRect(),backButtonRect=backButton.getBoundingClientRect(),styleHeight=window.innerHeight-editorGUIRect.bottom;canvas.style.transform=`translateY(${editorGUIRect.top}px)`,canvas.style.width=`${styleWidth}px`,canvas.style.height=`${styleHeight}px`,editorGUI.style.paddingLeft=`${backButtonRect.right}px`;const resolutionWidth=Math.floor(styleWidth*devicePixelRatio),resolutionHeight=Math.floor(styleHeight*devicePixelRatio),resized=canvas.width!==resolutionWidth||canvas.height!==resolutionHeight;resized&&(canvas.width=resolutionWidth,canvas.height=resolutionHeight),ctx.fillStyle="#000",ctx.fillRect(0,0,canvas.width,canvas.height),ctx.save(),ctx.translate(canvas.width/2,canvas.height/2);const borderSize=.2,viewWidth=levelInfo.width+borderSize*2,viewHeight=levelInfo.height+borderSize*2,viewCenterX=levelInfo.width/2,viewCenterY=levelInfo.height/2,scale=Math.min(canvas.width/viewWidth,canvas.height/viewHeight);ctx.scale(scale,scale),ctx.translate(-viewCenterX,-viewCenterY),transform=ctx.getTransform(),resized&&postResize(),drawEntities(ctx,entities),drawProblems(ctx),setLevelBorder(levelInfo),ctx.restore();for(const overlayElement of document.querySelectorAll(".level-specific-overlay"))positionElement(overlayElement,tileOnPage({x:0,y:0,width:levelInfo.width,height:levelInfo.height}))}function drawEntities(ctx2,entities2){for(const entity of entities2)entity.draw?.(ctx2);for(const entity of entities2)entity.draw2?.(ctx2);for(const entity of entities2)entity.draw3?.(ctx2)}const problems=[];function addProblem(tile,type){problems.push({tile,type})}function clearProblems(){problems.length=0}function drawProblems(ctx2){ctx2.save(),ctx2.globalAlpha=.5,ctx2.fillStyle="#f00",ctx2.font="1px sans-serif",ctx2.textAlign="center",ctx2.textBaseline="middle";for(const{tile,type}of problems){const icon=type==="overlap"?"🗗":"🛇",scale=Math.sin(performance.now()/200)*.2+1;ctx2.save(),ctx2.translate(tile.x+tile.width/2,tile.y+tile.height/2),ctx2.scale(scale,scale),ctx2.fillText(icon,0,0),ctx2.restore()}ctx2.restore()}function viewToWorld(clientPoint){const rect=canvas.getBoundingClientRect(),x=clientPoint.clientX-rect.left,y=clientPoint.clientY-rect.top;if(!transform)return{x:0,y:0};const point=new DOMPoint(x*devicePixelRatio,y*devicePixelRatio).matrixTransform(transform.inverse());return{x:point.x,y:point.y}}function worldToView(worldPoint){const rect=canvas.getBoundingClientRect(),point=new DOMPoint(worldPoint.x,worldPoint.y).matrixTransform(transform);return{x:point.x/devicePixelRatio+rect.left,y:point.y/devicePixelRatio+rect.top}}function pageToWorldTile(clientPoint){const worldPoint=viewToWorld(clientPoint);return{x:Math.floor(worldPoint.x),y:Math.floor(worldPoint.y),width:1,height:1}}function tileOnPage(tile){const point=worldToView(tile),point2=worldToView({x:tile.x+tile.width,y:tile.y+tile.height});return{x:point.x,y:point.y,width:point2.x-point.x,height:point2.y-point.y}}let tool="Brush",brushEntityClass=Block,brushColor=CollisionLayer.White,draggingEntities=[],dragGestureLastTile,draggingSegmentIndex=0,defining,createdUndoState=!1,selectionRange,selectedEntities=[],selectTheSelectTool=()=>{};function getSelectionBox(){if(selectionRange)return{x:Math.min(selectionRange.startTile.x,selectionRange.endTile.x),y:Math.min(selectionRange.startTile.y,selectionRange.endTile.y),width:Math.abs(selectionRange.startTile.x-selectionRange.endTile.x)+1,height:Math.abs(selectionRange.startTile.y-selectionRange.endTile.y)+1}}function initLevelEditorGUI(){const entitiesBar=document.getElementById("entities-bar"),entityButtons=entitiesBar.querySelectorAll(".entity-button"),toolButtons=entitiesBar.querySelectorAll(".tool-button");function setSelectedButton(button){selectionRange=void 0,setHighlight(void 0);for(const button2 of toolButtons)button2.classList.remove("selected");button.classList.add("selected")}const eraserButton=document.querySelector(".tool-button[data-tool='Eraser'"),moveButton=document.querySelector(".tool-button[data-tool='Move'"),selectButton=document.querySelector(".tool-button[data-tool='Select'"),clearButton=document.querySelector("#clear-button"),invertButton=document.querySelector("#invert-button"),levelInfoButton=document.querySelector("#level-info-button"),levelInfoEditor=document.querySelector("#level-info-editor"),levelInfoEditorOKButton=document.querySelector("#level-info-editor-ok-button"),levelInfoEditorCancelButton=document.querySelector("#level-info-editor-cancel-button"),saveButton=document.querySelector("#save-button"),openButton=document.querySelector("#open-button");saveButton.addEventListener("click",saveLevel),openButton.addEventListener("click",openLevel),eraserButton.addEventListener("click",()=>{tool="Eraser",setSelectedButton(eraserButton)}),moveButton.addEventListener("click",()=>{tool="Move",setSelectedButton(moveButton)}),selectButton.addEventListener("click",()=>{tool="Select",setSelectedButton(selectButton)}),clearButton.addEventListener("click",()=>{selectedEntities.length||selectionRange?deleteSelectedEntities():clearLevel()}),invertButton.addEventListener("click",invert),levelInfoButton.addEventListener("click",()=>{levelInfoEditor.showModal();const widthInput=levelInfoEditor.querySelector("#level-width"),heightInput=levelInfoEditor.querySelector("#level-height");widthInput.value=levelInfo.width.toString(),heightInput.value=levelInfo.height.toString()}),levelInfoEditor.addEventListener("close",()=>{console.log(levelInfoEditor.returnValue)}),levelInfoEditorOKButton.addEventListener("click",event=>{event.preventDefault(),undoable(),levelInfo.width=parseInt(levelInfoEditor.querySelector("#level-width").value),levelInfo.height=parseInt(levelInfoEditor.querySelector("#level-height").value),postUpdate(),levelInfoEditor.close()}),levelInfoEditorCancelButton.addEventListener("click",event=>{event.preventDefault(),levelInfoEditor.close()}),selectTheSelectTool=()=>{tool="Select",setSelectedButton(selectButton)};for(const button of entityButtons)makeEntityButton(button);tool==="Move"?setSelectedButton(moveButton):tool==="Eraser"?setSelectedButton(eraserButton):tool==="Select"&&setSelectedButton(selectButton);function makeEntityButton(button){const entityName=button.getAttribute("data-entity"),entityColor=button.getAttribute("data-color"),layer=entityColor==="White"?CollisionLayer.White:entityColor==="Black"?CollisionLayer.Black:CollisionLayer.None;function makeColoredEntity(){const entityInstance=makeEntity(entityName);if(entityInstance instanceof Snake)for(const segment of entityInstance.segments)segment.layer=layer;else entityInstance instanceof RectangularEntity&&(entityInstance.layer=layer);return entityInstance}button.addEventListener("click",()=>{brushEntityClass=makeEntity(entityName).constructor,brushColor=layer,tool="Brush",setSelectedButton(button)}),button.classList.toggle("selected",entityName===brushEntityClass.name&&layer===brushColor&&tool==="Brush");const canvas2=document.createElement("canvas"),ctx2=canvas2.getContext("2d");button.prepend(canvas2);const styleWidth=48,styleHeight=48;function renderIcon(){canvas2.style.width=`${styleWidth}px`,canvas2.style.height=`${styleHeight}px`,canvas2.width=styleWidth*devicePixelRatio,canvas2.height=styleHeight*devicePixelRatio;const entityForButton=makeColoredEntity();ctx2.scale(devicePixelRatio,devicePixelRatio),ctx2.translate(8,8),ctx2.scale(32,32),drawEntities(ctx2,[entityForButton])}renderIcon(),addEventListener("resize",renderIcon)}}function handleInputForLevelEditing(eventTarget){const{on,removeEventListeners}=makeEventListenerGroup();function updateHighlight(){const pressed=pointerDownTile&&sameTile(mouseHoveredTile,pointerDownTile);let valid=!1;mouseHoveredTile&&(tool==="Move"?valid=hitTestAllEntities(mouseHoveredTile.x,mouseHoveredTile.y).length>0:withinLevel(mouseHoveredTile)&&(valid=!0)),tool==="Select"?setHighlight(getSelectionBox(),{isSelection:!0,valid:!0}):setHighlight(mouseHoveredTile,{pressed,valid}),validateLevel()}onUpdate(updateHighlight),onResize(updateHighlight);function validateLevel(){clearProblems();const entitiesByPosition=new Map;for(const entity of entities){const key=`${entity.x??"?"},${entity.y??"?"}`,bucket=entitiesByPosition.get(key)??[];if(bucket.push(entity),entitiesByPosition.set(key,bucket),entity instanceof RectangularEntity)withinLevel(entity)||addProblem(entity,"out-of-bounds");else if(entity instanceof Snake)for(const segment of entity.segments){withinLevel(segment)||addProblem(segment,"out-of-bounds");for(const otherSegment of entity.segments)segment!==otherSegment&&sameTile(segment,otherSegment)&&addProblem(segment,"overlap");const hits=hitTestAllEntities(segment.x,segment.y);topLayer(hits.filter(hit=>hit.entity!==entity))===segment.layer&&addProblem(segment,"collision")}}for(const bucket of entitiesByPosition.values()){const collectablesHere=bucket.filter(entity=>entity instanceof Collectable);collectablesHere.length>1&&addProblem(collectablesHere[1],"overlap")}}let pointerDownTile,mouseHoveredTile;on(eventTarget,"pointerdown",event=>{pointerDownTile=pageToWorldTile(event);const selectionBox=getSelectionBox(),shouldDragSelection=selectionBox&&pointerDownTile&&within(pointerDownTile,selectionBox);if(!withinLevel(pointerDownTile)&&tool!=="Select"&&(pointerDownTile=void 0),mouseHoveredTile=pointerDownTile,pointerDownTile&&!draggingEntities.length&&event.button===0&&(tool==="Move"||shouldDragSelection)){if(shouldDragSelection)draggingEntities=[...selectedEntities],draggingSegmentIndex=0,dragGestureLastTile=pointerDownTile;else{const hits=hitTestAllEntities(pointerDownTile.x,pointerDownTile.y),hit=hits[hits.length-1];draggingEntities=[hit?.entity].filter(Boolean),draggingSegmentIndex=hit?.segmentIndex??0,dragGestureLastTile=void 0}if(draggingEntities.length){undoable();for(const entity of draggingEntities)entities.splice(entities.indexOf(entity),1);entities.push(...draggingEntities),sortEntities()}updateHighlight()}else pointerDownTile&&event.button===0&&tool==="Select"?(selectionRange={startTile:{...pointerDownTile},endTile:{...pointerDownTile},defining:!0},selectEntitiesInSelectionBox(),updateHighlight()):mouseHoveredTile&&handlePointerDownOrMove(event,mouseHoveredTile,mouseHoveredTile)}),on(window,"pointerup",endDrag),on(window,"pointercancel",endDrag);function endDrag(event){pointerDownTile=void 0,defining=void 0,draggingEntities=[],draggingSegmentIndex=0,dragGestureLastTile=void 0,createdUndoState=!1,selectionRange?.defining&&(selectionRange.defining=!1),mouseHoveredTile=pageToWorldTile(event),withinLevel(mouseHoveredTile)||(mouseHoveredTile=void 0),updateHighlight()}on(window,"pointermove",event=>{const lastTile=mouseHoveredTile;if(mouseHoveredTile=pageToWorldTile(event),!pointerDownTile&&!withinLevel(mouseHoveredTile)&&(mouseHoveredTile=void 0),mouseHoveredTile)if(draggingEntities.length||dragGestureLastTile)if(selectionRange&&dragGestureLastTile)translateSelection(mouseHoveredTile.x-dragGestureLastTile.x,mouseHoveredTile.y-dragGestureLastTile.y),dragGestureLastTile=mouseHoveredTile;else for(const entity of draggingEntities)drag(entity,mouseHoveredTile);else selectionRange?.defining&&pointerDownTile?(selectionRange.endTile={...mouseHoveredTile},selectEntitiesInSelectionBox()):handlePointerDownOrMove(event,lastTile,mouseHoveredTile);sameTile(lastTile,mouseHoveredTile)||updateHighlight()});function handlePointerDownOrMove(event,from,to){if(!(!from||!to||!pointerDownTile)){if(event.buttons===2||tool==="Eraser"&&event.buttons===1)for(const point of bresenham(from,to))erase({x:point.x,y:point.y,width:1,height:1});else if(event.buttons===1&&tool==="Brush"){const lineFn=brushEntityClass===Snake?lineNoDiagonals:bresenham;for(const point of lineFn(from,to)){const tile={x:point.x,y:point.y,width:1,height:1};brush(brushEntityClass===Snake?clampToLevel(tile):tile)}}}}function brush(mouseHoveredTile2){const hits=hitTestAllEntities(mouseHoveredTile2.x,mouseHoveredTile2.y);if(withinLevel(mouseHoveredTile2)&&topLayer(hits)!==brushColor&&!hits.some(hit=>hit.entity instanceof Collectable)||defining instanceof Snake&&!sameTile(mouseHoveredTile2,defining.segments[0])){createdUndoState||(undoable(),createdUndoState=!0);const entityInstance=defining??new brushEntityClass;defining||entityInstance instanceof Snake&&(entityInstance.segments.length=0,defining=entityInstance),entityInstance instanceof Snake?entityInstance.segments.unshift({layer:brushColor,x:mouseHoveredTile2.x,y:mouseHoveredTile2.y,width:1,height:1}):entityInstance instanceof RectangularEntity&&(entityInstance.layer=brushColor,entityInstance.x=mouseHoveredTile2.x,entityInstance.y=mouseHoveredTile2.y),entities.includes(entityInstance)||entities.push(entityInstance),sortEntities(),postUpdate()}}function erase(mouseHoveredTile2){const hits=hitTestAllEntities(mouseHoveredTile2.x,mouseHoveredTile2.y);for(const hit of hits){const index=entities.indexOf(hit.entity);if(index>=0)if(createdUndoState||(undoable(),createdUndoState=!0),hit.entity instanceof Snake&&hit.entity.segments.length>=2){const before=hit.entity.segments.slice(0,hit.segmentIndex),after=hit.entity.segments.slice(hit.segmentIndex+1);if(hit.entity.segments.length=before.length,after.length>0){const newSnake=new Snake;newSnake.segments.length=0,newSnake.segments.push(...after),entities.push(newSnake),hit.entity.segments.length===0&&(entities.splice(index,1),hit.entity===activePlayer&&setActivePlayer(newSnake)),sortEntities()}}else entities.splice(index,1),hit.entity===activePlayer&&setActivePlayer(void 0)}}function drag(dragging,to){if(to=clampToLevel(to),dragging instanceof RectangularEntity)dragging.x=to.x,dragging.y=to.y;else if(dragging instanceof Snake){const draggingSegment=dragging.segments[draggingSegmentIndex];if(draggingSegment.x!==to.x||draggingSegment.y!==to.y){const from={x:draggingSegment.x,y:draggingSegment.y};for(const point of[...lineNoDiagonals(from,to)].slice(1)){for(let i=dragging.segments.length-1;i>draggingSegmentIndex;i--)lead(dragging.segments[i-1],dragging.segments[i]);for(let i=0;i<draggingSegmentIndex;i++)lead(dragging.segments[i+1],dragging.segments[i]);draggingSegment.x=point.x,draggingSegment.y=point.y,Snake.DEBUG_SNAKE_DRAGGING&&draw()}}}}function lead(leader,follower){follower.x=leader.x,follower.y=leader.y,follower.width=leader.width,follower.height=leader.height,Snake.DEBUG_SNAKE_DRAGGING&&draw()}function selectEntitiesInSelectionBox(){const selectionBox=getSelectionBox();selectionBox&&(selectedEntities=entities.filter(entity=>entity instanceof RectangularEntity?within(entity,selectionBox):entity instanceof Snake?entity.segments.some(segment=>within(segment,selectionBox)):!1),postUpdate())}return removeEventListeners}function deleteSelectedEntities(){if(selectedEntities.length){undoable();for(const entity of selectedEntities){const index=entities.indexOf(entity);index>=0&&entities.splice(index,1)}}selectedEntities.length=0,selectionRange=void 0,setHighlight(void 0),postUpdate()}function selectAll(){selectTheSelectTool(),selectedEntities=[...entities],selectionRange={startTile:{x:0,y:0,width:1,height:1},endTile:{x:levelInfo.width-1,y:levelInfo.height-1,width:1,height:1},defining:!1},setHighlight(getSelectionBox(),{isSelection:!0,valid:!0}),postUpdate()}function invert(){undoable();const targetEntities=selectedEntities.length||selectionRange?selectedEntities:entities,targetRegion=getSelectionBox()??{x:0,y:0,width:levelInfo.width,height:levelInfo.height};for(const entity of targetEntities)if(entity instanceof RectangularEntity)entity.layer=entity.layer===CollisionLayer.White?CollisionLayer.Black:CollisionLayer.White;else if(entity instanceof Snake)for(const segment of entity.segments)segment.layer=segment.layer===CollisionLayer.White?CollisionLayer.Black:CollisionLayer.White;for(let x=targetRegion.x;x<targetRegion.x+targetRegion.width;x++)for(let y=targetRegion.y;y<targetRegion.y+targetRegion.height;y++)if(!hitTestAllEntities(x,y).length){const block=new Block;block.layer=CollisionLayer.White,block.x=x,block.y=y,entities.push(block),selectionRange&&selectedEntities.push(block)}postUpdate()}function translateEntity(dragging,dx,dy){if(dragging instanceof RectangularEntity)dragging.x+=dx,dragging.y+=dy;else if(dragging instanceof Snake)for(const segment of dragging.segments)segment.x+=dx,segment.y+=dy}function translateSelection(dx,dy){if(selectionRange){for(const entity of selectedEntities)translateEntity(entity,dx,dy);selectionRange.startTile.x+=dx,selectionRange.startTile.y+=dy,selectionRange.endTile.x+=dx,selectionRange.endTile.y+=dy,setHighlight(getSelectionBox(),{isSelection:!0,valid:!0})}}class Snake extends Entity{segments=[];id=crypto.randomUUID();growOnNextMove=!1;_highlightTime=-1/0;_highlightCanvas=document.createElement("canvas");_melodyIndex=0;static HIGHLIGHT_DURATION=500;static DEBUG_SNAKE_DRAGGING=!1;constructor(){super();for(let i=0;i<10;i++)this.segments.push({x:i,y:0,width:1,height:1,layer:CollisionLayer.White})}toJSON(){return{id:this.id,segments:this.segments,growOnNextMove:this.growOnNextMove}}highlight(){this._highlightTime=performance.now()}draw(ctx2){this._bodyPath(ctx2),ctx2.fillStyle=this.segments[0].layer===CollisionLayer.White?"#fff":"#000",ctx2.fill()}draw2(ctx2){const selectedInLevelEditor=selectedEntities.includes(this);this._drawHeadDetails(ctx2),this._drawBodyOutline(ctx2,(highlightCtx,transform2)=>{highlightCtx.strokeStyle=this.segments[0].layer===CollisionLayer.White?"#fff":"#000",highlightCtx.lineWidth=Math.min(.6,Math.max(.1,2/transform2.a))*2,highlightCtx.stroke()}),this._drawBodyOutline(ctx2,(highlightCtx,transform2)=>{selectedInLevelEditor&&highlightCtx.setLineDash([.1,.2]),highlightCtx.strokeStyle=this.segments[0].layer===CollisionLayer.White?"#000":"#fff",highlightCtx.lineWidth=Math.min(.6,Math.max(.1,2/transform2.a)),highlightCtx.stroke()})}draw3(ctx2){const msSinceHighlight=performance.now()-this._highlightTime,highlight=Math.min(1,Math.max(0,1-msSinceHighlight/Snake.HIGHLIGHT_DURATION));if(highlight>0&&this._drawBodyOutline(ctx2,(highlightCtx,transform2)=>{highlightCtx.strokeStyle="hsl(40, 100%, 50%)",highlightCtx.lineWidth=Math.min(1,Math.max(.2,10/transform2.a)),highlightCtx.stroke(),highlightCtx.resetTransform(),highlightCtx.globalCompositeOperation="destination-out",highlightCtx.globalAlpha=1-highlight,highlightCtx.fillStyle="#fff",highlightCtx.fillRect(0,0,highlightCtx.canvas.width,highlightCtx.canvas.height),highlightCtx.setTransform(transform2),highlightCtx.globalAlpha=1}),Snake.DEBUG_SNAKE_DRAGGING){ctx2.font="bold 0.5px sans-serif",ctx2.textAlign="center",ctx2.textBaseline="alphabetic";for(let i=0;i<this.segments.length;i++){const segment=this.segments[i];ctx2.fillStyle=`hsl(${i*360/this.segments.length}, 100%, 50%)`;const angleDiff=Math.PI/2;ctx2.fillText(i.toString(),segment.x+segment.width/2+Math.sin(i*angleDiff+Math.PI/4)*.3,segment.y+segment.height*.7+Math.cos(i*angleDiff+Math.PI/4)*.3)}}}_drawBodyOutline(ctx2,draw2){const transform2=ctx2.getTransform();this._highlightCanvas.width=ctx2.canvas.width,this._highlightCanvas.height=ctx2.canvas.height;const highlightCtx=this._highlightCanvas.getContext("2d");highlightCtx.save(),highlightCtx.clearRect(0,0,highlightCtx.canvas.width,highlightCtx.canvas.height),highlightCtx.lineJoin="round",highlightCtx.lineCap="round",highlightCtx.setTransform(transform2),this._bodyPath(highlightCtx),draw2(highlightCtx,transform2),highlightCtx.globalCompositeOperation="destination-out",this._bodyPath(highlightCtx),highlightCtx.fill(),highlightCtx.restore(),ctx2.resetTransform();try{ctx2.drawImage(this._highlightCanvas,0,0)}catch{}ctx2.setTransform(transform2)}_drawHeadDetails(ctx2){const head=this.segments[0];ctx2.save(),ctx2.translate(head.x+head.width/2,head.y+head.height/2),ctx2.scale(head.width,head.height);const angle=this.segments[1]?Math.atan2(this.segments[1].y-head.y,this.segments[1].x-head.x):Math.PI/2;ctx2.rotate(angle),ctx2.beginPath();const eyeRadius=1/8;ctx2.arc(0,.45/2,eyeRadius,0,Math.PI*2,!0),ctx2.arc(0,-.45/2,eyeRadius,0,Math.PI*2,!0),ctx2.fillStyle=head.layer===CollisionLayer.White?"#000":"#fff",ctx2.fill();const msSinceHighlight=performance.now()-this._highlightTime,highlight=Math.min(1,Math.max(0,1-msSinceHighlight/Snake.HIGHLIGHT_DURATION));highlight>0&&(ctx2.beginPath(),ctx2.translate(-1/2,0),ctx2.scale(Math.pow(Math.sin(highlight),.2),1),ctx2.rotate(Math.sin(performance.now()/50)*Math.PI/8),ctx2.moveTo(0,0),ctx2.translate(-.5,0),ctx2.lineTo(0,0),ctx2.rotate(Math.sin(performance.now()/50-1.5)*Math.PI/8),ctx2.lineTo(-.4,-.2),ctx2.lineTo(0,0),ctx2.lineTo(-.4,.2),ctx2.strokeStyle="#fff",ctx2.globalCompositeOperation="exclusion",ctx2.lineWidth=1/12,ctx2.stroke()),ctx2.restore()}_bodyPath(ctx2){ctx2.beginPath();const backtrack=[];function mirrored(draw2){draw2(),backtrack.push({matrix:ctx2.getTransform(),draw(){ctx2.scale(1,-1),draw2()}})}for(let i=0;i<this.segments.length;i++){const segment=this.segments[i];ctx2.save(),ctx2.translate(segment.x+segment.width/2,segment.y+segment.height/2);const backAngle=Math.atan2(this.segments[i+1]?.y-segment.y,this.segments[i+1]?.x-segment.x),foreAngle=Math.atan2(segment.y-this.segments[i-1]?.y,segment.x-this.segments[i-1]?.x);if(i===0)this.segments.length===1?ctx2.arc(0,0,1/2,0,Math.PI*2):(ctx2.rotate(backAngle),ctx2.scale(1,.9),mirrored(()=>ctx2.lineTo(1/2,1/2)),ctx2.arc(0,0,1/2,Math.PI/2,-Math.PI/2),ctx2.lineTo(1/2,-1/2),ctx2.lineTo(1/2,1/2));else if(i===this.segments.length-1){ctx2.rotate(foreAngle),ctx2.scale(1,.9),ctx2.lineTo(-1/2,-1/2);const extent=.5,pointiness=0;ctx2.quadraticCurveTo(extent*(1-pointiness),-1/2,extent,0),ctx2.quadraticCurveTo(extent*(1-pointiness),1/2,-1/2,1/2)}else ctx2.rotate(foreAngle),ctx2.scale(1,.9),mirrored(()=>ctx2.lineTo(-1/2,-1/2)),mirrored(()=>ctx2.lineTo(1/2,-1/2));ctx2.restore()}const transform2=ctx2.getTransform();for(let i=backtrack.length-1;i>=0;i--)ctx2.setTransform(backtrack[i].matrix),backtrack[i].draw();ctx2.closePath(),ctx2.setTransform(transform2)}at(x,y,includeHead=!0,includeTail=!0){for(let i=includeHead?0:1;i<this.segments.length-(includeTail?0:1);i++){const segment=this.segments[i];if(x===segment.x&&y===segment.y)return{entity:this,layer:segment.layer,segmentIndex:i}}return null}analyzeMoveAbsolute(tile){const deltaGridX=Math.round(tile.x-this.segments[0].x),deltaGridY=Math.round(tile.y-this.segments[0].y);return this.analyzeMoveRelative(deltaGridX,deltaGridY)}analyzeMoveRelative(dirX,dirY){const head=this.segments[0],tail=this.segments[this.segments.length-1],deltaX=dirX*head.width,deltaY=dirY*head.height,x=head.x+deltaX,y=head.y+deltaY,hitsAhead=hitTestAllEntities(x,y,{ignoreTailOfSnake:this.growOnNextMove?void 0:this}),hitsAtTail=hitTestAllEntities(tail.x,tail.y),snakesOnTop=this.segments.flatMap(segment=>hitTestAllEntities(segment.x,segment.y)).filter(hit=>hit.entity instanceof Snake&&hit.entity!==this&&entities.indexOf(hit.entity)>entities.indexOf(this)),movingBackwards=this.segments.length>1&&dirX===Math.sign(this.segments[1].x-head.x)&&dirY===Math.sign(this.segments[1].y-head.y);return{valid:(dirX===0||dirY===0)&&(Math.abs(dirX)===1||Math.abs(dirY)===1)&&x>=0&&y>=0&&x+head.width<=levelInfo.width&&y+head.height<=levelInfo.height&&!movingBackwards&&snakesOnTop.length===0&&topLayer(hitsAhead)!==head.layer&&topLayer(hitsAtTail)===head.layer&&shouldInputBeAllowed(),to:{x,y,width:head.width,height:head.height},entitiesThere:hitsAhead.map(hit=>hit.entity)}}takeMove(move){undoable(),playSound("move"),this.growOnNextMove&&(this._grow(),this.growOnNextMove=!1);const head=this.segments[0];for(let i=this.segments.length-1;i>0;i--){const segment=this.segments[i],prev=this.segments[i-1];segment.x=prev.x,segment.y=prev.y}head.x=move.to.x,head.y=move.to.y,head.width=move.to.width,head.height=move.to.height;const ontoIndices=move.entitiesThere.filter(e=>e.solid).map(e=>entities.indexOf(e)),maxIndex=Math.max(...ontoIndices),thisIndex=entities.indexOf(this);thisIndex<maxIndex&&(entities.splice(maxIndex+1,0,this),entities.splice(thisIndex,1));for(const entity of move.entitiesThere)if(entity instanceof Collectable&&entity.layer===head.layer){entities.splice(entities.indexOf(entity),1),this.growOnNextMove=!0;const midiToFreq=midiNote=>440*Math.pow(2,(midiNote-69)/12),melodyFrequencies=[..."CDEGACFAGCEGFECAGCDFECGEDBGDCGEGCDEGAFCAEDCAFECAGACEGECGAGDBEGCEGCEGCGGECGC".replace(/^([A-Z]:|%).*$/gim,"").matchAll(/([A-G])([,'])*/gi)].map(match=>{const letter=match[1],octaveModifier=match[2]==="'"?1:match[2]===","?-1:0;return 12*((letter===letter.toUpperCase()?1:0)+octaveModifier+4)+"CDEFGAB".indexOf(letter.toUpperCase())}).map(midiToFreq),eatPlaybackRate=melodyFrequencies[this._melodyIndex++%melodyFrequencies.length]/440;checkLevelWon()||playSound("eat",{playbackRate:eatPlaybackRate})}}_grow(){const newTail={...this.segments[this.segments.length-1]};this.segments.push(newTail)}}function sameTile(a,b){return a===b?!0:!a||!b?!1:a.x===b.x&&a.y===b.y&&a.width===b.width&&a.height===b.height}function neighborOf(tile,direction){return{x:tile.x+direction.x*tile.width,y:tile.y+direction.y*tile.height,width:tile.width,height:tile.height}}function withinLevel(tile){return tile.x>=0&&tile.y>=0&&tile.x+tile.width<=levelInfo.width&&tile.y+tile.height<=levelInfo.height}function within(tile,container){return tile.x>=container.x&&tile.y>=container.y&&tile.x+tile.width<=container.x+container.width&&tile.y+tile.height<=container.y+container.height}function clampToLevel(tile){return{x:Math.max(0,Math.min(levelInfo.width-tile.width,tile.x)),y:Math.max(0,Math.min(levelInfo.height-tile.height,tile.y)),width:tile.width,height:tile.height}}function*bresenham(start,end){const xDist=Math.abs(end.x-start.x),yDist=-Math.abs(end.y-start.y),xStep=start.x<end.x?1:-1,yStep=start.y<end.y?1:-1;let x=start.x,y=start.y,error=xDist+yDist;for(;yield{x,y},!(x===end.x&&y===end.y);){const e2=2*error;e2>=yDist&&(error+=yDist,x+=xStep),e2<=xDist&&(error+=xDist,y+=yStep)}}function*lineNoDiagonals(start,end){const xDist=Math.abs(end.x-start.x),yDist=-Math.abs(end.y-start.y),xStep=start.x<end.x?1:-1,yStep=start.y<end.y?1:-1;let x=start.x,y=start.y,error=xDist+yDist;for(;yield{x,y},!(x===end.x&&y===end.y);)2*error-yDist>xDist-2*error?(error+=yDist,x+=xStep):(error+=xDist,y+=yStep)}function makeEntity(entityType){switch(entityType){case"Block":return new Block;case"Snake":return new Snake;case"Collectable":return new Collectable;case"Crate":return new Crate;default:throw new Error(`Unknown entity type: ${entityType}`)}}function sortEntities(){entities.sort((a,b)=>+(a instanceof Collectable)-+(b instanceof Collectable)||+(b instanceof Crate&&a instanceof Snake)-+(a instanceof Crate&&b instanceof Snake))}function hitTestAllEntities(x,y,options={}){const hits=[];for(const entity of entities)if(entity instanceof Snake){const hit=entity.at(x,y,!0,entity!==options.ignoreTailOfSnake);hit&&hits.push(hit)}else if(entity.at){const hit=entity.at(x,y);hit&&hits.push(hit)}return hits}function topLayer(hits){let layer=CollisionLayer.Black;for(const hit of hits)hit.entity.solid&&(layer=hit.layer);return layer}function makeEventListenerGroup(){const listenerCleanupFunctions=[];function on(eventTarget,type,listener,options){eventTarget.addEventListener(type,listener,options),listenerCleanupFunctions.push(()=>eventTarget.removeEventListener(type,listener,options))}function removeEventListeners(){for(const cleanup2 of listenerCleanupFunctions)cleanup2()}return{on,removeEventListeners}}const playButton=document.querySelector("#play-button"),levelSelectButton=document.querySelector("#level-select-button"),levelEditorButton=document.querySelector("#level-editor-button"),creditsButton=document.querySelector("#credits-button"),backButtons=document.querySelectorAll(".back-to-main-menu-button"),mainMenu=document.querySelector("#main-menu"),levelSelect=document.querySelector("#level-select"),credits=document.querySelector("#credits"),levelSplash=document.querySelector("#level-splash"),levelSplashTitle=document.querySelector("#level-splash-title");function initMainMenu(){playButton.addEventListener("click",()=>{hideScreens(),loadFirstLevel()}),levelSelectButton.addEventListener("click",()=>{hideScreens(),levelSelect.classList.add("active"),document.body.dataset.screen="level-select"}),levelEditorButton.addEventListener("click",()=>{hideScreens(),setActivityMode("edit"),clearLevel(!1),document.body.dataset.screen="level-editor"}),creditsButton.addEventListener("click",()=>{hideScreens(),credits.classList.add("active"),document.body.dataset.screen="credits"});for(const backButton2 of backButtons)backButton2.addEventListener("click",showMainMenu);showMainMenu()}function hideScreens(options={}){for(const screen of document.querySelectorAll(".screen.active"))options.except?.includes(screen.id)||screen.classList.remove("active")}function showMainMenu(){return confirmLoseUnsavedChanges()?(hideScreens(),mainMenu.classList.add("active"),document.body.dataset.screen="main-menu",setActivityMode("menu"),playButton.focus(),!0):!1}function showLevelSplash(levelInfo2){hideScreens(),levelSplash.classList.add("active"),levelSplashTitle.textContent=levelInfo2.title,playSound("gong"),setTimeout(()=>{levelSplash.style.transition="opacity .5s",levelSplash.style.opacity="0",setTimeout(()=>{levelSplash.classList.remove("active"),levelSplash.style.transition="",levelSplash.style.opacity=""},600)},2e3)}let currentLevelButton,standaloneLevelMode=!0;function initLevelSelect(){const levelButtons=document.querySelectorAll(".level-button");for(const button of levelButtons)button.addEventListener("click",()=>{const levelURL=button.getAttribute("data-level");showLevelSplash({title:button.textContent??"Loading..."}),loadLevelFile(levelURL,()=>{currentLevelButton=button,standaloneLevelMode=!1,updatePageTitleAndLevelSpecificOverlays()})})}async function loadLevelFile(levelURL,loadedCallback){const request=await fetch(levelURL);if(!request.ok){alert(`Failed to load level ${JSON.stringify(levelURL)}: ${request.statusText}`);return}const blob=await request.blob();loadLevel(blob,"play",loadedCallback,levelURL)}function loadFirstLevel(){document.querySelector(".level-button").click()}function loadNextLevel(){if(!currentLevelButton){undo(),restartLevel();const winScreen=document.querySelector("#standalone-level-win-screen");winScreen.classList.add("active"),playSound("gong"),setTimeout(()=>{winScreen.style.transition="opacity .5s",winScreen.style.opacity="0",setTimeout(()=>{winScreen.classList.remove("active"),winScreen.style.transition="",winScreen.style.opacity=""},600)},800);return}const levelButtons=[...document.querySelectorAll(".level-button")],index=levelButtons.indexOf(currentLevelButton),levelButton=levelButtons[index+1];levelButton&&(currentLevelButton.closest("#test-cases-not-real-levels")||!levelButton.closest("#test-cases-not-real-levels"))?levelButton.click():(document.querySelector("#game-win-screen").classList.add("active"),playSound("gongBrilliant"))}function setStandaloneLevelMode(value=!0){standaloneLevelMode=value,value?(currentLevelButton=void 0,document.body.dataset.standaloneLevel=""):delete document.body.dataset.standaloneLevel}function setCurrentLevel(id){if(!id){setStandaloneLevelMode();return}currentLevelButton=document.querySelector(`button[data-level="${id}"]`)??void 0,standaloneLevelMode=!1}function currentLevelID(){return currentLevelButton?.getAttribute("data-level")??""}function updatePageTitleAndLevelSpecificOverlays(){activityMode==="edit"?document.title="Snakeshift - Level Editor":currentLevelButton?document.title=`Snakeshift - ${currentLevelButton.textContent}`:activityMode==="play"?document.title="Snakeshift - Custom Level":document.title="Snakeshift";for(const overlayElement of document.querySelectorAll(".level-specific-overlay"))overlayElement.hidden=overlayElement.dataset.forLevel!==currentLevelID()}const entities=[],defaultLevelInfo={width:16,height:16},levelInfo={width:defaultLevelInfo.width,height:defaultLevelInfo.height};let activePlayer,controlScheme=ControlScheme.KeyboardAbsoluteDirection;const undos=[],redos=[];function undoable(){undos.push(serialize()),redos.length=0}let recentUndoSound=0,recentRedoSound=0;function undo(){stepHistory(undos,redos,!0)&&(playSound("undo",{playbackRate:1/(1+recentUndoSound/2),cutOffEndFraction:Math.min(.2,recentUndoSound/5)}),recentUndoSound+=1,setTimeout(()=>{recentUndoSound-=1},400),document.getElementById("game-win-screen")?.classList.remove("active"))}function redo(){stepHistory(redos,undos)&&(playSound("redo",{playbackRate:1+recentRedoSound/10}),recentRedoSound+=1,setTimeout(()=>{recentRedoSound-=1},400))}function stepHistory(from,to,skipOverWinState=!1){const state=from.pop();if(!state)return!1;const oldState=serialize();return to.push(oldState),skipOverWinState&&JSON.parse(oldState).levelId!==JSON.parse(state).levelId?(stepHistory(from,to),!0):(deserialize(state),!0)}const FORMAT_VERSION=4;function serialize(){return JSON.stringify({format:"snakeshift",formatVersion:FORMAT_VERSION,levelInfo,entities,entityTypes:entities.map(e=>e.constructor.name),activePlayerEntityIndex:entities.indexOf(activePlayer),levelId:currentLevelID()},null,2)+`
`}function deserialize(state,levelId=null){const whichSnakeBefore=activePlayer?.id??"";entities.length=0;const parsed=JSON.parse(state);if(parsed.format!=="snakeshift")throw new Error("Invalid format");if(parsed.formatVersion>FORMAT_VERSION)throw new Error("Format version is too new");if(parsed.formatVersion===1){parsed.formatVersion=2;for(let i=0;i<parsed.entities.length;i++){const entDef=parsed.entities[i];if(parsed.entityTypes[i]==="Snake")for(const segDef of entDef.segments)"width"in segDef||(segDef.width=segDef.height=segDef.size)}}if(parsed.formatVersion===2&&(parsed.formatVersion=3,parsed.levelInfo={width:16,height:16}),parsed.formatVersion===3){parsed.formatVersion=4;for(const entDef of parsed.entities)delete entDef._time}if(parsed.formatVersion!==FORMAT_VERSION)throw new Error("Invalid format version");for(let i=0;i<parsed.entities.length;i++){const entityData=parsed.entities[i],entityType=parsed.entityTypes[i],instance=makeEntity(entityType);Object.assign(instance,entityData),entities.push(instance)}levelInfo.width=parsed.levelInfo.width,levelInfo.height=parsed.levelInfo.height,activePlayer=entities[parsed.activePlayerEntityIndex];const whichSnakeAfter=activePlayer?.id??"";whichSnakeBefore!==whichSnakeAfter&&activityMode=="play"&&activePlayer?.highlight(),standaloneLevelMode||setCurrentLevel(levelId||parsed.levelId),updatePageTitleAndLevelSpecificOverlays(),postUpdate()}function clearLevel(shouldBeUndoable=!0){shouldBeUndoable&&undoable(),entities.length=0,levelInfo.width=defaultLevelInfo.width,levelInfo.height=defaultLevelInfo.height,activePlayer=void 0,postUpdate()}function cyclePlayerControl(reverse=!1){const players=entities.filter(e=>e instanceof Snake),nextIndex=(players.indexOf(activePlayer)+(reverse?-1:1)+players.length)%players.length;players[nextIndex]&&shouldInputBeAllowed()&&(undoable(),activePlayer=players[nextIndex],playSound("switchSnakes"),activePlayer.highlight(),postUpdate())}const updateListeners=[],resizeListeners=[];function onUpdate(listener){updateListeners.push(listener)}function onResize(listener){resizeListeners.push(listener)}function postUpdate(){for(const listener of updateListeners)listener()}function postResize(){for(const listener of resizeListeners)listener()}function setControlScheme(scheme){controlScheme=scheme,postUpdate()}function setActivePlayer(snake){activePlayer=snake,postUpdate()}function saveLevel(){const levelJSON=serialize(),blob=new Blob([levelJSON],{type:"application/json"}),url=URL.createObjectURL(blob),a=document.createElement("a");a.href=url,a.download="snakeshift-level.json",a.click()}function savePlaythrough(){const json=JSON.stringify([...undos,serialize()]),blob=new Blob([json],{type:"application/json"}),url=URL.createObjectURL(blob),a=document.createElement("a");a.href=url,a.download="snakeshift-level-playthrough.json",a.click()}function loadPlaythrough(json){const playthrough=JSON.parse(json);if(!Array.isArray(playthrough))throw new Error("Invalid playthrough format");loadLevelFromText(playthrough[0],"play");for(const state of playthrough.toReversed())redos.push(state);redo(),alert(`Loaded playthrough with ${playthrough.length} moves. Press 'Y' (Redo) to step through it.`)}function loadLevel(file,newMode,loadedCallback,levelId=null){file.text().then(fileText=>{levelId&&setStandaloneLevelMode(!1),loadLevelFromText(fileText,newMode,levelId)&&loadedCallback?.()},error=>{alert(`Failed to read level file. ${error}`)})}function confirmLoseUnsavedChanges(){if(activityMode==="menu")return!0;if(activityMode==="edit"){if(undos.length===0&&redos.length===0)return!0}else if(activityMode==="play"&&(currentLevelID()||editorUndos.length===0&&editorRedos.length===0))return!0;return confirm("This will discard any unsaved changes. Are you sure?")}function loadLevelFromText(fileText,newMode,levelId=null){if(!confirmLoseUnsavedChanges())return!1;const before={state:serialize(),undos:[...undos],redos:[...redos]};if(activityMode==="play"&&newMode==="play"&&undoable(),fileText.startsWith("["))return loadPlaythrough(fileText),!0;try{if(deserialize(fileText,levelId),setBaseLevelState(),!activePlayer){for(const entity of entities)if(entity instanceof Snake){setActivePlayer(entity);break}}}catch(error){return deserialize(before.state),undos.splice(0,undos.length,...before.undos),redos.splice(0,redos.length,...before.redos),alert(`Failed to load level. ${error.toString()}`),!1}return setActivityMode(newMode),hideScreens({except:["level-splash"]}),document.body.dataset.screen="game",!0}function openLevel(){const input=document.createElement("input");input.type="file",input.accept="application/json",input.addEventListener("change",()=>{const file=input.files?.[0];file&&loadLevel(file,"edit")}),input.click()}function handleInput(eventTarget){const{on,removeEventListeners}=makeEventListenerGroup();function updateHighlight(){controlScheme===ControlScheme.KeyboardFacingRelative||controlScheme===ControlScheme.KeyboardAbsoluteDirection&&highlightMove(void 0)}onUpdate(updateHighlight),onResize(updateHighlight);const MOVE_THRESHOLD=40;let dragging=!1,lastPointerPosition;if(activityMode!=="menu"){let pointerDownSnake,movedSincePointerDown=!1;const snakeUnderPointer=event=>{const mouseTile=pageToWorldTile(event),hits=hitTestAllEntities(mouseTile.x,mouseTile.y);return hits.reverse(),hits.find(hit=>hit.entity instanceof Snake)?.entity};on(eventTarget,"pointerdown",event=>{dragging=!0,lastPointerPosition={x:event.clientX,y:event.clientY},setControlScheme(ControlScheme.Pointer),pointerDownSnake=snakeUnderPointer(event),movedSincePointerDown=!1}),on(window,"pointerup",event=>{dragging=!1,lastPointerPosition=void 0,pointerDownSnake&&snakeUnderPointer(event)===pointerDownSnake&&!movedSincePointerDown&&shouldInputBeAllowed()&&(setActivePlayer(pointerDownSnake),playSound("switchSnakes"),pointerDownSnake.highlight())}),on(window,"pointercancel",()=>{dragging=!1,lastPointerPosition=void 0}),on(window,"pointermove",event=>{if(!dragging||!activePlayer||!lastPointerPosition)return;event.preventDefault();const deltaX=event.clientX-lastPointerPosition.x,deltaY=event.clientY-lastPointerPosition.y;if(Math.abs(deltaX)<MOVE_THRESHOLD&&Math.abs(deltaY)<MOVE_THRESHOLD)return;let moveX=0,moveY=0;if(Math.abs(deltaX)>Math.abs(deltaY)?moveX=Math.sign(deltaX):moveY=Math.sign(deltaY),moveX!==0||moveY!==0){const move2=activePlayer.analyzeMoveRelative(moveX,moveY);move2.valid&&(activePlayer.takeMove(move2),postUpdate(),moveX!==0&&(lastPointerPosition.x=event.clientX),moveY!==0&&(lastPointerPosition.y=event.clientY),movedSincePointerDown=!0)}})}function move(dx,dy,controlScheme2=ControlScheme.KeyboardAbsoluteDirection){if(!activePlayer){const currentFocus=document.activeElement??document.body,currentRect=currentFocus.getBoundingClientRect(),currentCenter={x:currentRect.x+currentRect.width/2,y:currentRect.y+currentRect.height/2},normalizedInput={x:dx/Math.hypot(dx,dy),y:dy/Math.hypot(dx,dy)},directionalScore=element=>{const rect=element.getBoundingClientRect(),center={x:rect.x+rect.width/2,y:rect.y+rect.height/2},distanceX=center.x-currentCenter.x,distanceY=center.y-currentCenter.y,vector={x:distanceX/Math.hypot(distanceX,distanceY),y:distanceY/Math.hypot(distanceX,distanceY)};return normalizedInput.x*vector.x+normalizedInput.y*vector.y},distanceScore=element=>{const rect=element.getBoundingClientRect(),center={x:rect.x+rect.width/2,y:rect.y+rect.height/2},distanceX=center.x-currentCenter.x,distanceY=center.y-currentCenter.y;return Math.hypot(distanceX,distanceY)},combinedScore=element=>distanceScore(element)/directionalScore(element),isVisibleAndOnTop=element=>{const rect=element.getBoundingClientRect(),center={x:rect.x+rect.width/2,y:rect.y+rect.height/2};return document.elementFromPoint(center.x,center.y)===element},focusableElements=[...document.querySelectorAll("button, a")].filter(element=>element!==currentFocus&&isVisibleAndOnTop(element)&&directionalScore(element)>0);focusableElements.sort((a,b)=>combinedScore(a)-combinedScore(b)),focusableElements.length&&(console.log("focusing",focusableElements[0]),focusableElements[0].focus());return}const move2=activePlayer.analyzeMoveRelative(dx,dy);if(!move2.valid){setControlScheme(controlScheme2);return}activePlayer.takeMove(move2),setControlScheme(controlScheme2)}on(window,"keydown",event=>{if(event.ctrlKey||event.metaKey||event.altKey)return;let handling=!0;switch(event.code){case"ArrowLeft":case"KeyA":case"Numpad4":case"KeyH":move(-1,0);break;case"ArrowRight":case"KeyD":case"Numpad6":case"KeyL":move(1,0);break;case"ArrowUp":case"KeyW":case"Numpad8":case"KeyK":move(0,-1);break;case"ArrowDown":case"KeyS":case"Numpad2":case"KeyJ":move(0,1);break;case"Tab":case"ShiftLeft":case"ShiftRight":activityMode==="play"?cyclePlayerControl():handling=!1;break;default:handling=!1;break}handling&&event.preventDefault()});const buttonsLast=new Map;function justPressed(button,gamepad){const last=buttonsLast.get(gamepad.index)?.get(button);return gamepad.buttons[button].pressed&&!last}const minDistance=.5;function pollGamepads(){const gamepads=navigator.getGamepads();let hoveredTile;for(const gamepad of gamepads){if(!gamepad)continue;let usingGamepad=!1;if(activePlayer){const[leftStickX,leftStickY]=gamepad.axes.slice(0,2),playerTile=activePlayer.segments[0],dist=Math.hypot(leftStickX,leftStickY),angle=Math.atan2(leftStickY,leftStickX);let directionIndex=Math.round(angle/(Math.PI/2));directionIndex=(directionIndex%DIRECTIONS.length+DIRECTIONS.length)%DIRECTIONS.length;const direction=DIRECTIONS[directionIndex];if(dist>minDistance){usingGamepad=!0,hoveredTile=neighborOf(playerTile,direction);const move2=activePlayer.analyzeMoveRelative(direction.x,direction.y);hoveredTile&&justPressed(0,gamepad)&&move2.valid?(activePlayer.takeMove(move2),setControlScheme(ControlScheme.Gamepad),hoveredTile=void 0):setControlScheme(ControlScheme.Gamepad)}}justPressed(12,gamepad)?move(0,-1,ControlScheme.Gamepad):justPressed(13,gamepad)?move(0,1,ControlScheme.Gamepad):justPressed(14,gamepad)?move(-1,0,ControlScheme.Gamepad):justPressed(15,gamepad)&&move(1,0,ControlScheme.Gamepad),justPressed(4,gamepad)?cyclePlayerControl():justPressed(5,gamepad)&&cyclePlayerControl(!0),justPressed(0,gamepad)?activePlayer||document.activeElement instanceof HTMLElement&&document.activeElement.click():justPressed(2,gamepad)?undo():justPressed(1,gamepad)?redo():justPressed(3,gamepad)&&restartLevel(),justPressed(8,gamepad)&&showMainMenu(),buttonsLast.set(gamepad.index,new Map(gamepad.buttons.map((button,index)=>[index,button.pressed])));for(const button of gamepad.buttons)button.pressed&&(usingGamepad=!0);usingGamepad&&setControlScheme(ControlScheme.Gamepad)}controlScheme===ControlScheme.Gamepad&&highlightMove(hoveredTile)}const intervalID=setInterval(pollGamepads,1e3/60);return()=>{removeEventListeners(),clearInterval(intervalID)}}function step(time){for(const entity of entities)entity.step?.(time)}function animate(time=0){requestAnimationFrame(animate),step(time),draw()}let activityMode="menu",wonLevel=!1;const editorUndos=[],editorRedos=[];let editorState,levelHasGoal=!1,cleanup=handleInput(canvas);function setActivityMode(newMode){activityMode!==newMode&&(console.log("Switching from",activityMode,"to",newMode),cleanup(),activityMode=newMode,document.body.classList.toggle("editing",activityMode==="edit"),activityMode==="edit"?(setStandaloneLevelMode(),cleanup=handleInputForLevelEditing(canvas),editorState&&(undos.splice(0,undos.length,...editorUndos),redos.splice(0,redos.length,...editorRedos),deserialize(editorState))):activityMode==="play"?(cleanup=handleInput(canvas),editorUndos.splice(0,editorUndos.length,...undos),editorRedos.splice(0,editorRedos.length,...redos),editorState=serialize(),levelHasGoal=entities.some(e=>e instanceof Collectable),undos.length=0,redos.length=0):(setStandaloneLevelMode(),cleanup=handleInput(canvas),clearLevel(!1),undos.length=0,redos.length=0,editorUndos.length=0,editorRedos.length=0,editorState=void 0,levelHasGoal=!1),wonLevel=!1,updatePageTitleAndLevelSpecificOverlays())}function setBaseLevelState(){editorState=serialize(),levelHasGoal=entities.some(e=>e instanceof Collectable),wonLevel=!1}function restartLevel(){if(activityMode==="play"){if(currentLevelID()){loadLevelFile(currentLevelID(),()=>{updatePageTitleAndLevelSpecificOverlays()});return}editorState&&(undoable(),deserialize(editorState),wonLevel=!1)}}function checkLevelWon(){return window._winLevelCheat?(window._winLevelCheat=!1,!0):levelHasGoal?entities.filter(e=>e instanceof Collectable).length===0:(console.log("No goal; level is unwinnable."),!1)}function handleLevelCompletion(){onUpdate(()=>{activityMode==="play"&&(!wonLevel&&checkLevelWon()?(wonLevel=!0,console.log("Level won!",currentLevelID()),loadNextLevel()):checkLevelWon()||(wonLevel=!1))})}function shouldInputBeAllowed(){return!document.querySelector("#game-win-screen.active, #level-splash.active, #standalone-level-win-screen.active")||parseFloat(getComputedStyle(document.querySelector("#game-win-screen.active, #level-splash.active, #standalone-level-win-screen.active")).opacity)<.7}const playEditToggleButton=document.querySelector("#play-edit-toggle-button"),restartLevelButton=document.querySelector("#restart-level-button"),undoButton=document.querySelector("#undo-button"),redoButton=document.querySelector("#redo-button");playEditToggleButton.addEventListener("click",()=>{setActivityMode(activityMode==="play"?"edit":"play")});restartLevelButton.addEventListener("click",restartLevel);undoButton.addEventListener("click",undo);redoButton.addEventListener("click",redo);addEventListener("keydown",event=>{if(event.key==="`"&&!event.repeat)activityMode==="play"?setActivityMode("edit"):activityMode==="edit"&&setActivityMode("play"),event.preventDefault();else if(event.key==="z"||event.key==="Z")event.shiftKey?redo():undo(),event.preventDefault();else if(event.key==="y")redo(),event.preventDefault();else if(event.key==="r")restartLevel(),event.preventDefault();else if(event.key==="p")savePlaythrough(),event.preventDefault();else if(event.key==="s"&&(event.ctrlKey||event.metaKey))saveLevel(),event.preventDefault();else if(event.key==="o"&&(event.ctrlKey||event.metaKey))openLevel(),event.preventDefault();else if(event.key==="n"&&activityMode=="edit")clearLevel(),event.preventDefault();else if(event.key==="a"&&activityMode=="edit")selectAll(),event.preventDefault();else if(event.key==="Delete"&&activityMode=="edit")deleteSelectedEntities(),event.preventDefault();else if(event.key==="i"&&activityMode=="edit")invert(),event.preventDefault();else if((event.key==="ArrowLeft"||event.key==="ArrowRight"||event.key==="ArrowUp"||event.key==="ArrowDown")&&activityMode=="edit"){const dx=event.key==="ArrowRight"?1:event.key==="ArrowLeft"?-1:0,dy=event.key==="ArrowDown"?1:event.key==="ArrowUp"?-1:0;undoable(),translateSelection(dx,dy),event.preventDefault()}else event.key==="Escape"?(activityMode==="play"?setActivityMode("edit"):showMainMenu(),event.preventDefault()):event.key==="m"&&(toggleMute(),event.preventDefault());enableAudioViaUserGesture()});canvas.addEventListener("pointerdown",event=>{event.preventDefault(),window.getSelection()?.removeAllRanges()});window.addEventListener("pointerdown",()=>{enableAudioViaUserGesture()});canvas.addEventListener("contextmenu",event=>{event.preventDefault()});addEventListener("dragover",event=>{event.preventDefault()});addEventListener("drop",event=>{event.preventDefault();const file=event.dataTransfer?.files[0];file&&loadLevel(file,"edit")});handleLevelCompletion();initMainMenu();initLevelEditorGUI();initLevelSelect();Object.assign(resources,await loadResources(resourcePaths));animate();
